name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags
  workflow_dispatch:  # Allows manual triggering

jobs:
  wait_for_other_action:
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch an action and get the run ID
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          ref: ${{ github.event.ref }} # or refs/heads/target_branch
          token: ${{ github.token }}
          repo: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          workflow: screenshots.yml
      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ github.token }}
          repo: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional

  build:
    runs-on: ubuntu-latest
    needs: wait_for_other_action  # Ensure this job waits for the previous job to finish

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/toomanyfiles/tmf-timetable-frontend:${{ env.VERSION }} \
                       -t ghcr.io/toomanyfiles/tmf-timetable-frontend:latest .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image with version and latest tags
        run: |
          docker push ghcr.io/toomanyfiles/tmf-timetable-frontend:${{ env.VERSION }}
          docker push ghcr.io/toomanyfiles/tmf-timetable-frontend:latest
