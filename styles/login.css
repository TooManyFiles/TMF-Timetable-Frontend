:root {
  --accent-dark: #6f6f6f;
  --accent-light: #D9D9D9;
  --highlight: rgba(64, 125, 127, 1);
  --highlight-faded: rgba(64, 125, 127, 0.54);
  --text: rgb(0, 0, 0);
  --text-faded: rgb(73, 73, 73);
}
html, body {
  height: 100%;
  margin: 0;
}

body {
  font-family: 'Open Sans', sans-serif;
  background-color: #f4f4f4;
  display: flex;
  justify-content: center;
  align-items: center;
}

a {
  color: var(--highlight);
  text-decoration: none;
}

.center-wrapper {
  text-align: center;
}

.container { 
  width: 600px;
  margin: 20px auto; 
  padding: 50px;
  background-color: white;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
}

.group { 
  position: relative; 
  margin-bottom: 45px; 
}

/* INPUT */

input {
  font-size: 18px;
  padding: 10px 10px 10px 5px;
  display: block;
  width: 100%;
  border: none;
  border-bottom: 1px solid var(--highlight-faded);
}

input:focus {
  outline: none;
  border: none;
}

label {
  font-size: 18px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 5px;
  top: 10px;
  transition: 0.2s ease all;
}

input:focus ~ label, input:valid ~ label {
  top: -20px;
  font-size: 14px;
  color: var(--highlight);
}

.bar {
  position: relative;
  display: block;
  width: 100%;
}

.bar:before, .bar:after {
  content: '';
  height: 2px;
  width: 0;
  bottom: 1px;
  position: absolute;
  background: var(--highlight);
  transition: 0.2s ease all;
}

.bar:before {
  left: 50%;
}

.bar:after {
  right: 50%;
}

input:focus ~ .bar:before, input:focus ~ .bar:after {
  width: 50%;
}

.highlight {
  position: absolute;
  height: 60%;
  width: 100px;
  top: 25%;
  left: 0;
  pointer-events: none;
  opacity: 0.5;
}

input:focus ~ .highlight {
  animation: inputHighlighter 0.3s ease;
}

@keyframes inputHighlighter {
  from { background: var(--highlight); }
  to   { width: 0; background: transparent; }
}

@-moz-keyframes inputHighlighter {
	from { background:var(--highlight);; }
  to 	{ width:0; background:transparent; }
}
@keyframes inputHighlighter {
	from { background:var(--highlight); }
  to 	{ width:0; background:transparent; }
}



/* BUTTON */
.button {
  position: relative;
  border: 2px solid var(--highlight);
  border-radius: 12px;
  background-color: var(--highlight);
  color: white;
  font-size: 15px;
  width: 20em;
  height: 2.5em;
  transition: all 0.5s;
  cursor: pointer;
  margin-bottom: 10px;
}

.button a {
  color: white;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

/* Hide the arrow when the button is in loading state */
.button:not(.loading) span:after {
  content: '\00bb';
  position: absolute;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.5s;
}

/* Only apply hover effect if the button is not loading */
.button:not(.loading):hover span {
  padding-right: 25px;
}

.button:not(.loading):hover span:after {
  opacity: 1;
  right: 0;
}


/* ERROR DISPLAY */
#error-display {
  position: fixed;
  bottom: 7.5vh;
  border: 1px solid red;
  right: 45px;
  padding-left: 10px;
  padding-right: 10px;
  z-index: 999;
  color: red;
  align-items: center;
  font-family: Arial, sans-serif;
  background-color: #ff00003b;
  border-radius: 15px;
  width: 15%;
  word-wrap: break-word;
  overflow-wrap: break-word;
  word-break: break-word;
}

/* Close button style */
#close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: transparent;
  border: none;
  font-size: 20px;
  cursor: pointer;
  color: red;
}

#close-button:hover {
  color: darkred;
}

/* Loading Dots Animation */
@keyframes loadingDots {
  0% {
    opacity: 0;
  }
  33% {
    opacity: 1;
  }
  66% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

/* Apply the animation to each dot with delay */
.dot-1 {
  animation: loadingDots 1s infinite;
}

.dot-2 {
  animation: loadingDots 1s infinite;
  animation-delay: 0.2s;
}

.dot-3 {
  animation: loadingDots 1s infinite;
  animation-delay: 0.4s;
}

/* Button Loading Styles */
.button.loading .button-text {
  display: none;
}

.button.loading .loading-dots {
  display: inline-block;
}